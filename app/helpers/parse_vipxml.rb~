require 'rubygems'
require 'libxml'

class VipHandler 
	include LibXML::XML::SaxParser::Callbacks

	def initialize()
		@stack       = [];
		@store_chars = false;
#		@save        = false;
#		@contrib = contributor
	end

	def on_start_element(element, attributes)
		puts "Start "+element.downcase()
		case element.downcase()
		   when "source" ; begin
			   obj = Source.new
			   puts "holycrap"
			   puts attributes
			   sleep 3
			   @stack.push(obj)
		   end
		end
	end

	def on_characters(chars)
		if (@store_chars) then
			obj = @stack.pop
			obj = chars
		end
	end

	def on_end_element(element)
		@store_chars = false;

		if (@store_chars) then
			@chars = @stack.pop

		else
			puts "\tEnd "+element+"\n"
		end
		obj = @stack.pop
		if ["source", "precinct"].include?(lower(element)) then
			obj.save
		end
	end

	def method_missing(method_name, *attributes, &block)
	end	
end

class VipParser
#	def initialize(contrib, xmlfile)
	def initialize(xmlfile)
		con = LibXML::XML::Parser::Context.file(xmlfile)
		@parser = LibXML::XML::SaxParser.new(con)
		@parser.callbacks = VipHandler.new
	end

	def parse
		@parser.parse
	end
end

#parser = VipParser.new(contrib,'c:/rails/rails_apps/google_vip/ks.xml')
parser = VipParser.new('c:/rails/rails_apps/google_vip/ks.xml')
parser.parse

